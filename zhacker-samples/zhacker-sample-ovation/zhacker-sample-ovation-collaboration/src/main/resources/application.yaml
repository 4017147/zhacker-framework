server:
  port: 8082

#spring.datasource.url: jdbc:mysql://localhost:3306/iddd_collaboration?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
#spring.datasource.username: root
#spring.datasource.password: anywhere

#spring.jpa.hibernate.ddl-auto: update
spring:
#  jpa:
#    database: mysql
  application:
    name: collaboration
  profiles:
    active: local
  sleuth:
    sampler:
      percentage: 1.0

ddd.event.stream.store: mysql
ddd.event.stream.dispatcher: sql

eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true

swagger.basePackage: top.zhacker.ddd.collaboration.api

---
spring.profiles: local

spring.datasource.url: jdbc:mysql://127.0.0.1:3306/iddd_collaboration?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
spring.datasource.username: root
spring.datasource.password: anywhere

#spring:
#  rabbitmq:
#    host: 127.0.0.1
spring:
  kafka:
    bootstrap-servers: mq.host:9092

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/


---
spring.profiles: ecs

spring.datasource.url: jdbc:mysql://data.host:3306/iddd_collaboration?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
spring.datasource.username: root
spring.datasource.password: anywhere

#spring:
#  rabbitmq:
#    host: mq.host
#spring:
#  kafka:
#    bootstrap-servers: mq.host:9092

spring.cloud.stream.kafka.binder.zkNodes: data.host
spring.cloud.stream.kafka.binder.brokers: mq.host

eureka:
  client:
    service-url:
      defaultZone: http://data.host:8761/eureka/